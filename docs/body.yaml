# These instructions will get you a copy of the project up and running on your
# local machine for development and testing purposes.
usage: |- 
  ```
    A CLI built to assist Cloud Engineers. 
    Allowing Cloud Engineers to gain speed in development and administrative tasks.

    Usage:
      clencli [command]

    Available Commands:
      help        Help about any command
      init        Initialize a project
      template    Process templates
      unsplash    Downloads pictures from Unsplash.com
      version     Show clencli version

    Flags:
          --config string   config file (default is $HOME/.clencli.yaml)
      -h, --help            help for clencli
      -t, --toggle          Help message for toggle

    Use "clencli [command] --help" for more information about a command.
  ```

# Explain what tools are necessary to build and run the project
prerequisites:
  - description: Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.
    name: Go
    url: https://golang.org

# A step by step series of examples that tell you how to get a development env running.
installing: |-
  Download the proper binary under [releases](https://github.com/awslabs/clencli/releases). To centrally manage your preferences, create a file at `$HOME/clencli.yaml`.

  ### Unplash

  You can download photos to your project by joining [Unsplash](https://unsplash.com/documentation), registering an application (to obtain the access and secret key).
  After that, add the following to `$HOME/clencli.yaml`.

  ```
  unsplash:
    access_key: "xxx"
    secret_key: "xxx"
  ```

  Now every time you initialize a project, or update it (without removing the `logo.theme` field at `docs/intro.yaml`), a photo based will be downloaded.

# Explain how to run the automated tests for this system
testing: |-
  To debug the code using VS Code, please refer to this [documentation](https://github.com/golang/vscode-go/blob/master/docs/debugging.md).
  You can debug by creating debug tasks and specifying which command you want to debug:
  ```
  {
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug - template --type inputs",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}/main.go",
            "args": ["template", "--type", "inputs"]
        }
    ]
  }
  ```

